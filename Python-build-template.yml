# .build_python_template:
#   stage: build
#   image: python:3.11-alpine
#   variables:
#     PYTHONUNBUFFERED: 1
  
#   script:
#     - apk add --no-cache build-base linux-headers
#     - echo "--- Creating and activating virtual environment ---"
#     - python -m venv .venv
#     - . .venv/bin/activate
#     - echo "--- Installing dependencies ---"
#     - |
#       if [ -f requirements.txt ]; then
#         pip install --upgrade pip
#         pip install -r requirements.txt
#       else
#         echo "No requirements.txt found. Skipping dependency installation."
#       fi

#   artifacts:
#     when: always
#     paths:
#       - $venv_Dir/.venv/  # Save the virtual environment
#     expire_in: 1 day

#   cache:
#     key: "pip-$CI_COMMIT_REF_SLUG"
#     paths:
#       - .venv/            # Cache the venv
#       - ~/.cache/pip      # Cache downloaded wheels
#     policy: pull-push


.build_python_template:
  stage: build
  image: python:3.11-alpine
  variables:
    PYTHONUNBUFFERED: 1

  script:
    - apk add --no-cache build-base linux-headers
    - echo "--- Installing dependencies ---"
    - |
      if [ -f requirements.txt ]; then
        pip install --upgrade pip
        pip install --cache-dir ~/.cache/pip -r requirements.txt
      else
        echo "No requirements.txt found. Skipping dependency installation."
      fi

  cache:
    key: "pip-$CI_COMMIT_REF_SLUG"
    paths:
      - ~/.cache/pip     # Cache downloaded wheels to speed installs

  artifacts:
    when: always
    paths:
      - requirements.txt  # Save requirements for downstream jobs/build
    expire_in: 1 day
